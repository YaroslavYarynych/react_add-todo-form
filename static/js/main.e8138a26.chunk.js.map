{"version":3,"sources":["api/users.ts","services/user.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","UserInfo","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","preparedTodos","App","useState","setTitle","setUserId","hasTitleError","setHasTitleError","hasUserError","setHasUserError","newTodos","setNewTodos","action","method","onSubmit","event","preventDefault","newPreparedTodo","currentTodos","addTodo","Math","max","t","type","placeholder","value","onChange","validateInput","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8138a26.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\n\nexport interface User {\n  id: number,\n  name: string,\n  username: string,\n  email: string,\n}\n\nexport const getUserById = (userId: number): User | null => {\n  return usersFromServer.find(user => user.id === userId) || null;\n};\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User | null,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo',\n        { ' TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","/* eslint-disable no-useless-return */\nimport React, { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\n\nimport { getUserById } from './services/user';\n\nimport usersFromServer from './api/users';\n\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\n\nexport const preparedTodos: Todo[] = todosFromServer.map((todo) => (\n  {\n    ...todo,\n    user: getUserById(todo.userId),\n  }\n));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n  const [newTodos, setNewTodos] = useState<Todo[]>(preparedTodos);\n\n  function validateTitle(input: string) {\n    const validateInput = input.replace(/[^a-zA-Zа-яА-Я0-9\\s]/g, '');\n\n    return validateInput;\n  }\n\n  const addTodo = (newPreparedTodo: Todo) => {\n    setNewTodos((currentTodos) => [\n      ...currentTodos,\n      { ...newPreparedTodo },\n    ]);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const validateInput = validateTitle(event.target.value);\n\n    setTitle(validateInput);\n    setHasTitleError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n    setHasTitleError(false);\n    setHasUserError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    const newPreparedTodo: Todo = {\n      id: Math.max(...newTodos.map(t => t.id)) + 1,\n      completed: false,\n      title,\n      userId,\n      user: getUserById(userId),\n    };\n\n    addTodo(newPreparedTodo);\n    reset();\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n\n          {hasTitleError\n            && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {hasUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={newTodos}\n      />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}